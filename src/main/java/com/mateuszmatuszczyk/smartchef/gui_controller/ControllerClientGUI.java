/**
 *
 * @author Mateusz Matuszczyk
 */
package com.mateuszmatuszczyk.smartchef.gui_controller;

import java.awt.Color;
import java.awt.Cursor;
import javax.swing.JProgressBar;

public class ControllerClientGUI extends javax.swing.JFrame implements Printer {

    private ControllerClient controller_client;
    private boolean cookerStatus;
    private boolean controllerStatus;
    private boolean potStatus;
    private boolean dispenserStatus;
    private boolean taskDone;
    
    public ControllerClientGUI() {
        initComponents();
    }

    public ControllerClientGUI(ControllerClient controller_client) {
        this();
        this.controller_client = controller_client;
        this.cookerStatus = controller_client.getCookerStatusOnOff();
        this.controllerStatus = false;
        this.potStatus = controller_client.getPotStatusOnOff();
        this.dispenserStatus = false;
        this.cookerSwitch.setEnabled(false);
        this.controllerSwitch.setBackground(Color.red);        
        this.potSwitch.setEnabled(false);
        this.dispenserSwitch.setEnabled(false);
        this.dispenserSwitch.setBackground(Color.red);
        this.cookerSwitch.setBackground(Color.red);
        this.potSwitch.setBackground(Color.red);
//        this.progressBar = new JProgressBar();
        this.progressBar.setValue(0);
        this.progressBar.setStringPainted(true);
        this.taskDone = false;
            
    } 

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        controllerSwitch = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        cookerSwitch = new javax.swing.JButton();
        progressBar = new javax.swing.JProgressBar();
        dispenserSwitch = new javax.swing.JButton();
        potSwitch = new javax.swing.JButton();
        startHeatingBtn = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        controllerSwitch.setText("GUI Controller");
        controllerSwitch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                controllerSwitchActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        cookerSwitch.setText("Smart Cooker");
        cookerSwitch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cookerSwitchActionPerformed(evt);
            }
        });

        progressBar.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                progressBarPropertyChange(evt);
            }
        });

        dispenserSwitch.setText("Food Dispensor");
        dispenserSwitch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dispenserSwitchActionPerformed(evt);
            }
        });

        potSwitch.setText("Smart Pot");
        potSwitch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                potSwitchActionPerformed(evt);
            }
        });

        startHeatingBtn.setText("Start Heating");
        startHeatingBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startHeatingBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 358, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(25, 25, 25)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(startHeatingBtn)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(cookerSwitch)
                                        .addGap(12, 12, 12)
                                        .addComponent(potSwitch)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(dispenserSwitch)))))
                        .addGap(15, 15, 15))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(controllerSwitch)
                        .addGap(132, 132, 132)))
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(114, 114, 114))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(controllerSwitch)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cookerSwitch)
                            .addComponent(dispenserSwitch)
                            .addComponent(potSwitch))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(startHeatingBtn)
                .addGap(53, 53, 53)
                .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    
    private void controllerSwitchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_controllerSwitchActionPerformed
        if(controllerStatus == true){
            controller_client.switchOff();
            controllerSwitch.setBackground(Color.red);
            cookerStatus = false;
            cookerSwitch.setEnabled(false);
            potSwitch.setEnabled(false);
            dispenserSwitch.setEnabled(false);
        }
        else{
            controllerSwitch.setBackground(Color.green);
            controller_client.switchOn();
            controllerStatus = true;
            cookerSwitch.setEnabled(true);
            potSwitch.setEnabled(true);
            dispenserSwitch.setEnabled(true);
            
        }
    }//GEN-LAST:event_controllerSwitchActionPerformed
    
    private void cookerSwitchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cookerSwitchActionPerformed
        if(cookerStatus == true){
            controller_client.switchCookerOff();
            cookerSwitch.setBackground(Color.red);
            cookerStatus = false;
        }
        else{
            cookerSwitch.setBackground(Color.green);
            controller_client.switchCookerOn();
            cookerStatus = true;
        }
// TODO add your handling code here:
    }//GEN-LAST:event_cookerSwitchActionPerformed

    private void dispenserSwitchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dispenserSwitchActionPerformed
//        if(dispenserStatus == true){
//            controller_client.switchDispenserOff();
//            dispenserSwitch.setBackground(Color.red);
//            dispenserStatus= false;
//        }
//        else{
//            dispenserSwitch.setBackground(Color.green);
//            controller_client.switchDispenserOn();
//            dispenserStatus = true;
//        }
    }//GEN-LAST:event_dispenserSwitchActionPerformed

    private void potSwitchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_potSwitchActionPerformed
        if(potStatus == true){
            controller_client.switchPotOff();
            potSwitch.setBackground(Color.red);
            potStatus = false;
        }
        else{
            potSwitch.setBackground(Color.green);
            controller_client.switchPotOn();
            potStatus = true;
        }
    }//GEN-LAST:event_potSwitchActionPerformed

    private void progressBarPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_progressBarPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_progressBarPropertyChange

    private void startHeatingBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startHeatingBtnActionPerformed
        controller_client.startHeating();
    }//GEN-LAST:event_startHeatingBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ControllerClientGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ControllerClientGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ControllerClientGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ControllerClientGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the GUI Controller */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ControllerClientGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton controllerSwitch;
    private javax.swing.JButton cookerSwitch;
    private javax.swing.JButton dispenserSwitch;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JButton potSwitch;
    public static javax.swing.JProgressBar progressBar;
    private javax.swing.JButton startHeatingBtn;
    // End of variables declaration//GEN-END:variables

    public void append(String string) {
        jTextArea1.append("\n" + string);
    }

    public void clear() {
        jTextArea1.setText("");
    }
}
